# name: CI/CD Pipeline Tugas Besar KPL CLO2

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   test:
#     name: Test API
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4
      
#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: '3.11'

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt
      
#       - name: Install k6
#         run: |
#           sudo apt update
#           sudo apt install -y gnupg software-properties-common
#           sudo mkdir -p /etc/apt/keyrings
#           curl -fsSL https://dl.k6.io/key.gpg | sudo gpg --dearmor -o /etc/apt/keyrings/k6-archive-keyring.gpg
#           echo "deb [signed-by=/etc/apt/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
#           sudo apt update
#           sudo apt install k6

#       - name: Run tests
#         run: |
#           pytest -W ignore
#           python app/tests/performance_test/k6_testing.py

#   sonarqube-scan:
#     name: SonarQube Scan
#     runs-on: ubuntu-latest
#     needs: test
#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: '3.11'

#       - name: Install dependencies
#         run: |
#           pip install -r requirements.txt

#       - name: Download SonarScanner
#         run: |
#           wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
#           unzip sonar-scanner-cli-5.0.1.3006-linux.zip
#           sudo mv sonar-scanner-*/ /opt/sonar-scanner
#           echo "SONAR_SCANNER_HOME=/opt/sonar-scanner" >> $GITHUB_ENV
#           echo "/opt/sonar-scanner/bin" >> $GITHUB_PATH

#       - name: Run SonarScanner
#         env:
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#         run: |
#           sonar-scanner \
#             -Dsonar.projectKey=api-barang \
#             -Dsonar.sources=. \
#             -Dsonar.host.url=http://${{ secrets.SONAR_HOST }} \
#             -Dsonar.login=$SONAR_TOKEN \
#             -Dsonar.python.version=3.11 \
#             -Dsonar.sourceEncoding=UTF-8

#   deploy-api:
#     name: Deploy API to Production
#     runs-on: ubuntu-latest
#     needs: sonarqube-scan
#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4

#       - name: Deploy via SSH
#         uses: appleboy/ssh-action@v1
#         with:
#           host: ${{ secrets.SERVER_HOST }}
#           username: ${{ secrets.SERVER_USER }}
#           password: ${{ secrets.SERVER_PASSWORD }}
#           script: |
#             echo "‚úÖ Terhubung ke server"
#             cd /home/CLO2_TB_KPL

#             echo "üì• Menandai folder git sebagai aman"
#             git config --global --add safe.directory /home/CLO2_TB_KPL

#             echo "üì• Pulling latest changes..."
#             git pull origin main

#             echo "üê≥ Membuild dan menjalankan kontainer Docker"
#             docker stop api-barang || true
#             docker rm api-barang || true
#             docker build -t api-barang .
#             docker run -d \
#             --name api-barang \
#             --env-file .env \
#             -v /home/CLO2_TB_KPL/data:/app/data \
#             -p 5151:5151 \
#             api-barang
            
#             echo "üöÄ API berhasil dideploy"