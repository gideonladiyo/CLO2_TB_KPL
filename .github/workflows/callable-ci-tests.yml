name: Callable CI Tests and Scan

on:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: true
      SONAR_HOST:
        required: true

    outputs:
      ci_result:
        description: "Result of the CI process"
        value: ${{ jobs.sonarqube-scan.result }}

jobs:
  test:
    name: Test API
    runs-on: ubuntu-latest
    outputs:
      test_outcome: ${{ steps.run_tests.outcome }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Install k6
        run: |
          sudo apt update
          sudo apt install -y gnupg software-properties-common
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://dl.k6.io/key.gpg | sudo gpg --dearmor -o /etc/apt/keyrings/k6-archive-keyring.gpg
          echo "deb [signed-by=/etc/apt/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt update
          sudo apt install k6

      - name: Run tests
        id: run_tests
        run: |
          pytest -W ignore
          python app/tests/performance_test/k6_testing.py

  sonarqube-scan:
    name: SonarQube Scan
    runs-on: ubuntu-latest
    needs: test 
    
    if: needs.test.outputs.test_outcome == 'success'
    outputs:
      scan_outcome: ${{ steps.run_sonar_scanner.outcome }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Download SonarScanner
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner-cli-5.0.1.3006-linux.zip
          sudo mv sonar-scanner-*/ /opt/sonar-scanner
          echo "SONAR_SCANNER_HOME=/opt/sonar-scanner" >> $GITHUB_ENV
          echo "/opt/sonar-scanner/bin" >> $GITHUB_PATH

      - name: Run SonarScanner
        id: run_sonar_scanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=gideon \
            -Dsonar.sources=. \
            -Dsonar.host.url=http://${{ secrets.SONAR_HOST }} \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.python.version=3.11 \
            -Dsonar.sourceEncoding=UTF-8